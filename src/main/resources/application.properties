# ===== Spring Boot \uAE30\uBCF8 \uC124\uC815 =====
spring.application.name=aviation-weather-producer

# ===== \uCE74\uD504\uCE74 \uC124\uC815 =====
spring.kafka.bootstrap-servers=13.209.157.53:9092,15.164.111.153:9092,3.34.32.69:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.batch-size=16384
spring.kafka.producer.linger-ms=1
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.compression-type=gzip
spring.kafka.producer.enable-idempotence=true
spring.kafka.producer.request-timeout-ms=30000
spring.kafka.producer.delivery-timeout-ms=120000

# ===== JSON \uC124\uC815 =====
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Seoul
spring.jackson.default-property-inclusion=non_null

# ===== \uD56D\uACF5 \uAE30\uC0C1 API \uC124\uC815 =====
aviation.weather.base-url=https://aviationweather.gov/api/data
aviation.weather.user-agent=AviationWeatherProducer/1.0 (contact@yourcompany.com)
aviation.weather.request-timeout-seconds=30
aviation.weather.retry-attempts=3

# ===== \uC2A4\uCF00\uC904 \uC124\uC815 (cron \uD45C\uD604\uC2DD) =====
aviation.weather.schedule.metar-cron=0 */60 * * * *
aviation.weather.schedule.pirep-cron=0 */10 * * * *
aviation.weather.schedule.sigmet-cron=0 */10 * * * *

# ===== \uCE74\uD504\uCE74 \uD1A0\uD53D \uC124\uC815 =====
aviation.weather.topics.metar=AWC-METAR
aviation.weather.topics.pirep=AWC-PIREP
aviation.weather.topics.sigmet=AWC-SIGMET

# ===== \uB370\uC774\uD130 \uD544\uD130\uB9C1 \uC124\uC815 =====
aviation.weather.filters.metar-hours-back=2
aviation.weather.filters.hazard-regions[0]=all
aviation.weather.filters.hazard-types[0]=all
aviation.weather.filters.hazard-types[1]=conv
aviation.weather.filters.hazard-types[2]=turb
aviation.weather.filters.hazard-types[3]=ice
aviation.weather.filters.hazard-types[4]=mtw
aviation.weather.filters.hazard-types[5]=sand
aviation.weather.filters.hazard-types[6]=trop
aviation.weather.filters.hazard-types[7]=ash

# ===== XML to JSON \uBCC0\uD658 \uC124\uC815 =====
aviation.weather.xml-conversion.enabled=true
aviation.weather.xml-conversion.pretty-print=false
aviation.weather.xml-conversion.include-xml-attributes=true
aviation.weather.xml-conversion.root-element-name=weatherData

# ===== \uB85C\uAE45 \uC124\uC815 =====
logging.level.com.aviation.weather=INFO
logging.level.org.apache.kafka=WARN
logging.level.org.springframework.kafka=INFO
logging.level.org.springframework.web.reactive=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/aviation-weather-producer.log

# ===== \uC561\uCD94\uC5D0\uC774\uD130 (\uBAA8\uB2C8\uD130\uB9C1) \uC124\uC815 =====
management.endpoints.web.exposure.include=health,info,metrics,prometheus,env,configprops
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# ===== \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC815\uBCF4 =====
info.app.name=Aviation Weather Kafka Producer
info.app.description=METAR, PIREP, SIGMET \uB370\uC774\uD130\uB97C \uC218\uC9D1\uD558\uC5EC \uCE74\uD504\uCE74\uB85C \uC804\uC1A1
info.app.version=1.0.0
info.app.developer=Your Company
info.app.contact=contact@yourcompany.com

# ===== WebClient \uBC84\uD37C \uC124\uC815 =====
spring.codec.max-in-memory-size=10MB