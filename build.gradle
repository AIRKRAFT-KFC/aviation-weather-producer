plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.aviation.weather'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients:3.5.0'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // XML Processing (XML to JSON 변환용)
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    
    // Scheduling
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    
    // Configuration
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Actuator (모니터링)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

application {
    mainClass = 'com.aviation.weather.AviationWeatherProducerApplication'
}

tasks.named('test') {
    useJUnitPlatform()
}
